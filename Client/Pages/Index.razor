@page "/"
@page "/folder/{FolderId}"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization

@inject ghostlight.Client.Services.AppState _appState
@inject ghostlight.Client.Services.API API
@inject IModalService _modalService

<AuthorizeView>
    <Authorized>
            <div class="row">
                <div class="mx-auto">

                    <div class="card" style="width: 18rem;">
                        <div class="card-body">
                            <h5 class="card-title">Demo/Dev Tools</h5>
                            <p class="card-text">Quickly populate or clear your customer data, for demo or debugging.</p>
                            <div class="card-body">
                                <input type="button" class="btn btn-primary w-100" value="Seed Customers" @onclick="SeedDB" />
                                <input type="button" class="btn btn-warning w-100" value="Clear Your Records" @onclick="SeedDBClear" />
                            </div>
                        </div>
                    </div>

                </div>
            </div>
    </Authorized>
    <NotAuthorized>
        <div class="row">
            <div class="mx-auto">
                <a class="btn btn-lg btn-outline-success btn-home mt-5" href="authentication/login">Log in</a>
            </div>
        </div>
        <div class="row">
            <div class="mx-auto">
                <a class="btn btn-lg btn-outline-primary btn-home mt-5" href="authentication/register">Register</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>
<div class="row mt-5">
    <div class="col-md-4 offset-md-4">
        <p class="app-desc">
            'ghostlight' is my Blazor WebAssembly Template. Microsoft provides several versions of templates for Blazor apps - they work great. My personal preference for a template is to have more functionality. This template provides simple pages and components that show CRUD ops, API calls, Authentication/Authorization with Identity.
        </p>
        <p class="app-desc text-center mt-5">
            Visit the code repo at github to clone the project and get started
        </p>
    </div>
</div>
<div class="row">
    <div class="mx-auto">
        <a class="btn btn-lg btn-outline-primary btn-home" href="https://github.com/dahln/ghostlight" target="_blank">Go to Github</a>
    </div>
</div>
<div class="row mt-5">
    <div class="mx-auto">
        <a href="https://github.com/dahln/ghostlight/blob/master/LICENSE" target="_blank">License &amp; Terms</a>
    </div>
</div>

@code {

    [Parameter]
    public string FolderId { get; set; }

    async protected override Task OnInitializedAsync()
    {
        _appState.OnChange += StateHasChanged;

        await _appState.UpdateAppState();
    }

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);

        var result = await _appState.UpdateAppState(FolderId);
    }

    private async Task SeedDB()
    {
        await API.SeedDB(50);
    }
    private async Task SeedDBClear()
    {
        var modal = _modalService.Show<ConfirmDialog>("Are you sure you want to clear your customer data?");
        var modalResult = await modal.Result;

        if (modalResult.Cancelled) { }
        else
        {
            await API.SeedDBClear();
        }
    }
}

