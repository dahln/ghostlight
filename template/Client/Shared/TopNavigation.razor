@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject template.Client.Services.AppState _appState

<AuthorizeView>
    <Authorized>
        <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="/"><img src="template-small.png" class="template-logo mr-3" />template</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navToggle" aria-controls="navToggle" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navToggle">
                <ul class="navbar-nav ml-md-auto">
                    <li class="nav-item">
                        <a class="nav-link mr-2" href="customers">Search</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link mr-2" href="authentication/profile">@context.User.Identity.Name</a>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="BeginSignOut"><i class="fas fa-sign-out-alt mr-1"></i>Log out</button>
                    </li>
                </ul>
            </div>
        </nav>
    </Authorized>
    <NotAuthorized>
        <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="/"><img src="template-small.png" class="template-logo mr-3" />template</a>
        </nav>
    </NotAuthorized>
</AuthorizeView>

@code{      
    protected override void OnInitialized()
    {
        _appState.OnChange += StateHasChanged;
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
